import pandas as pd
from tensorflow.keras.models import load_model
import numpy as np

model = load_model('my_lstm_model.keras')  # مسیر واقعی مدل خود را وارد کنید




data = {
    "time": ["2020-10-08 10:00", "2020-10-08 11:00", "2020-10-08 12:00", "2020-10-08 13:00", "2020-10-08 14:00", "2020-10-08 15:00", "2020-10-08 16:00", "2020-10-08 17:00", "2020-10-08 18:00", "2020-10-08 19:00"],
    "high": [10629.46, 10616.21, 10653.41, 10747.59, 10944.84, 10938.45, 10936.7, 10957.42, 10901.29, 10900.73],
    "low": [10563.34, 10602.47, 10598.98, 10622.81, 10718.08, 10868.96, 10887.43, 10875.99, 10858.12, 10864.62],
    "open": [10567.85, 10612.74, 10610.03, 10637.24, 10736.57, 10916.35, 10901.44, 10930.69, 10884.73, 10880.22],
    "volumefrom": [704.78, 471.26, 1835.6, 4867.24, 6924.3, 4246.28, 2636.53, 2535.15, 1343.9, 1170.81],
    "volumeto": [7472273.51, 5001098.74, 19512340.78, 52161239.37, 75111027.88, 46294584.95, 28771864.82, 27679499.49, 14624196.91, 12745958.62],
    "close": [10612.74, 10610.03, 10637.24, 10736.57, 10916.35, 10901.44, 10930.69, 10884.73, 10880.22, 10888.14],
    "Sum_percent": [0.0, 0.0, 2.6082588613590945, 1.674464004798559, 0.0, 0.0, 0.0, -0.04143419267175408, 0.0, 0.0],
    "SMA_20": [10634.219, 10633.094, 10633.4115, 10638.2975, 10651.0295, 10663.4655, 10676.9475, 10688.0975, 10699.0995, 10709.873],
    "RSI_14": [37.28349565675183, 36.535055734972524, 44.72982907553741, 60.493300052548626, 79.45728818739516, 77.1139219051253, 78.44729543686041, 71.78303096939713, 72.33979686057236, 75.58632168255407],
    "EMA_20": [10622.02161022373, 10620.879552107184, 10622.437690001738, 10633.307433811095, 10660.263868686228, 10683.233024049445, 10706.800355092353, 10723.746035559749, 10738.648317887391, 10752.885620945735],
    "MACD": [-11.874926563952613, -11.313636581944593, -8.57435085151701, 1.593287266072366, 23.882652887932636, 39.884262387819035, 54.29994775225532, 61.309160527784115, 65.7422570268136, 69.09807614113379],
    "WMA_20": [10623.854476190476, 10621.550761904762, 10621.94561904762, 10631.77023809524, 10658.25142857143, 10682.10004761905, 10707.55, 10727.33880952381, 10745.63619047619, 10763.640047619047],
    "Volatility_20": [29.456795452802798, 29.95021805439963, 29.95928047377149, 37.828039004519745, 72.80515499520385, 91.85821456652725, 109.56577269136706, 118.88607048760305, 126.12751389883086, 132.77826225242626],
    "RSI_141": [37.28349565675183, 36.535055734972524, 44.72982907553741, 60.493300052548626, 79.45728818739516, 77.1139219051253, 71.78303096939713, 71.78303096939713, 72.33979686057236, 75.58632168255407],
    "MACD_Signal": [-5.448354558082173, -6.6214109628546565, -7.0119989405871275, -5.290941699255229, 0.5437772181823437, 8.411874252109682, 17.58948895213881, 26.333423267267875, 34.21519001917702, 41.19176724356838],
    "Bollinger_Upper": [10693.132590905607, 10692.9944361088, 10693.330060947543, 10713.953578009041, 10796.639809990409, 10847.181929133054, 10896.079045382732, 10925.869640975206, 10951.354527797663, 10975.429524504852],
    "Bollinger_Lower": [10575.305409094395, 10573.193563891202, 10573.492939052458, 10562.64142199096, 10505.419190009592, 10479.749070866947, 10457.815954617265, 10450.325359024793, 10446.844472202338, 10444.316475495147],
    "ROC_12": [-0.4450206281695104, -0.586919674270819, -0.0867892486530739, 0.8555735809248793, 2.5438822267353225, 2.389877326831346, 2.748658617746476, 2.5161100740470017, 2.3650746459632397, 2.7767682936613953],
    "CMO_14": [-25.433008686496322, -26.929888530054964, -10.54034184892518, 20.98660010509725, 58.91457637479033, 54.22784381025061, 43.566061938794256, 44.67959372114473, 51.17264336510815, 79.21638278009118],
    "TSI": [-47.347000894003436, -48.30353399838197, -37.018098747280696, 4.3996022717023955, 46.192565034655594, 61.033213577432036, 69.90319416678392, 74.06819747334922, 76.92598559628242, 79.21638278009118],
    "streak_counter": [1.0, 1.0, 3.0, 2.0, 1.0, 0.0, 0.0, 2.0, 1.0, 1.0],
    "start_index": [24285.0, 24286.0, 24287.0, 24287.0, 24287.0, 24290.0, 24291.0, 24292.0, 24292.0, 24294.0]
}

df = pd.DataFrame(data)

# تبدیل فیلد تاریخ به datetime
df['time'] = pd.to_datetime(df['time'])

# تبدیل فقط ستون‌های عددی به float
numeric_cols = df.select_dtypes(include=['number']).columns
df[numeric_cols] = df[numeric_cols].astype(float)

# حذف یا پر کردن مقادیر خالی
df = df.dropna()  # یا df = df.fillna(0)

# تابع برای تست مدل
def test_model(model, data, timesteps):
    input_data = data.values
    input_data = np.array([input_data[i:i + timesteps] for i in range(len(input_data) - timesteps)])
    predictions = model.predict(input_data)
    return predictions

# تعداد تایم‌استپ‌ها
timesteps = 1  # مقدار مناسب را تنظیم کنید

# تست مدل
predictions = test_model(model, df[numeric_cols], timesteps)
print(predictions)
